# -*- coding: utf-8 -*-
"""Iris Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DRx0iqkjzoV1Dn2uThI3aghVCS8dGa5l
"""

# Commented out IPython magic to ensure Python compatibility.
#loading Libraries
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
# %matplotlib inline

#Loading the data
columns=['Sepal Length','Sepal Width','Petal Length','Petal Width','Class_Label']
#Load  the data
df=pd.read_csv('iris[1].data',names=columns)
df.head

#Graphical Represtion on Flowers Classification
from sklearn.datasets import load_iris
dataset=load_iris()
x=dataset.data
y=dataset.target
plt.plot(x[:,0][y==0],x[:,1][y==0],'r.',label='Setosa')
plt.plot(x[:,0][y==1],x[:,1][y==1],'b.',label='Versicolor')
plt.plot(x[:,0][y==2],x[:,1][y==2],'y.',label='Virginica')
plt.legend()
plt.show()

#description of the data
df.describe()

#For Seaborn measurements using ploting
sns.pairplot(df,hue='Class_Label')

#Targeted Values
data=df.values
x=data[:,0:4]
y=data[:,4]
print(x)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)
print(y_test)

#First Algorithm (Vector Machine)
from sklearn.svm import SVC
model=SVC()
model.fit(x_train,y_train)

predict1=model.predict(x_test)
#Accuracy Calculation
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,predict1)*100)
#value comparison
for i in range(len(predict1)):
  print(y_test[i],predict1[i])

#Second Algorithm (Logistic Regression)
from sklearn.linear_model import LogisticRegression
model_lr=LogisticRegression()
model_lr.fit(x_train,y_train)

predict2=model_lr.predict(x_test)
#Accuracy Calculation
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,predict1)*100)

#Third Algorithm (Descision Tree)
from sklearn.tree import DecisionTreeClassifier
model_dt=DecisionTreeClassifier()
model_dt.fit(x_test,y_test)

predict3=model_dt.predict(x_test)
#Accuracy Calculation
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,predict3)*100)

#Classification Report on 3 Algorithims
from sklearn.metrics import classification_report
print(classification_report(y_test,predict1))
print(classification_report(y_test,predict2))
print(classification_report(y_test,predict3))

#prediction Using manual data
a=np.array([[3,2,1,0.2],[4.9,2.2,3.8,1.1],[5.3,2.5,4.6,1.9]])
prediction=model.predict(a)
print("Prediction of Species:{}".format(prediction))